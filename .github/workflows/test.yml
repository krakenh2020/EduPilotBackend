name: Test

on:
 push:
   branches:
     - master
 workflow_dispatch:
   branches:
     - main

jobs:
  phpunit:
    runs-on: ubuntu-latest

    services:
      student-agent:
        image: ghcr.io/hyperledger/aries-framework-go:0.1.6
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        env:
          ARIESD_API_HOST: 0.0.0.0:8092
          ARIESD_INBOUND_HOST: http@0.0.0.0:8091
          ARIESD_INBOUND_HOST_EXTERNAL: http@http://agent.student-agent.demo:8091
          ARIESD_WEBHOOK_URL: https://enybebk8mydni.x.pipedream.net
          ARIESD_DEFAULT_LABEL: student-agent
          ARIESD_DATABASE_TYPE: leveldb
          ARIESD_DATABASE_PREFIX: student
          ARIESD_DATABASE_TIMEOUT: 60
          ARIESD_HTTP_RESOLVER: http://sidetree-mock.demo:48326/sidetree/0.0.1/identifiers

    steps:
      -
        name: Configure GIT credential helper
        env:
          TUG_GITLAB_ACCESSTOKEN: ${{ secrets.TUG_GITLAB_ACCESSTOKEN }}
        run: |
          mkdir -p ~/.config/git/
          touch ~/.config/git/credentials
          chmod 600 ~/.config/git/credentials
          echo "$TUG_GITLAB_ACCESSTOKEN" >> ~/.config/git/credentials
          git config --global credential.helper 'store --file ~/.config/git/credentials'
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Generate demo keys
        run: cd docker-dev && ./generate_demo_keys.sh
      -
        name: Write build info
        run: |
          I="${{ github.sha }} ($(date -Iminutes ))"
          U="https://github.com/krakenh2020/EduPilotBackend/tree/${{ github.sha }}"
          echo $I
          echo $U 
          echo "APP_BUILDINFO=\"$I\"" >> .env
          echo "APP_BUILDINFO_URL=\"$U\"" >> .env
      -
        name: Install PHP Dependencies
        run: cd docker-dev && bash build.sh


      -
        name: Build
        run: cd docker-dev && ./build.sh
      -
        name: Test
        run: cd docker-dev && ./test.sh

        
      -
        name: Cleanup GIT credentials
        if: ${{ always() }}
        run: |
          rm ~/.config/git/credentials
          
